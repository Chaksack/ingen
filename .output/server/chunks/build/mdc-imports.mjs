import t from"node:process";globalThis._importMeta_=globalThis._importMeta_||{url:"file:///_entry.js",env:t.env};import r from"remark-emoji";import{P as i}from"../nitro/nitro.mjs";import"unist-util-visit";import"hast-util-to-string";import"node:http";import"node:https";import"node:events";import"node:buffer";import"node:fs";import"node:path";import"node:crypto";import"vue";import"consola";import"@unhead/schema-org/vue";import"node:url";import"unified";import"mdast-util-to-string";import"micromark";import"unist-util-stringify-position";import"micromark-util-character";import"micromark-util-chunked";import"micromark-util-resolve-all";import"micromark-util-sanitize-uri";import"slugify";import"remark-parse";import"remark-rehype";import"remark-mdc";import"remark-gfm";import"rehype-external-links";import"rehype-sort-attribute-values";import"rehype-sort-attributes";import"rehype-raw";import"detab";import"github-slugger";import"unhead/server";import"unhead/utils";import"unhead/plugins";import"vue-bundle-renderer/runtime";import"vue/server-renderer";import"ipx";const e={theme:{},async highlighter(t,r,i,e){try{return globalThis._importMeta_.browser&&"browser"===window.sessionStorage.getItem("mdc-shiki-highlighter")?import("./mdc-highlighter.mjs").then(o=>o.default(t,r,i,e)).catch(()=>({})):await $fetch("/api/_mdc/highlight",{params:{code:t,lang:r,theme:JSON.stringify(i),options:JSON.stringify(e)}})}catch(o){if(globalThis._importMeta_.browser&&404===o?.response?.status)return window.sessionStorage.setItem("mdc-shiki-highlighter","browser"),this.highlighter?.(t,r,i,e)}return Promise.resolve({tree:[{type:"text",value:t}],className:"",style:""})}};const o={"remark-emoji":{instance:r}},m={highlight:{instance:function(t={}){const r={...e,...t};return"function"!=typeof r.highlighter&&(r.highlighter=e.highlighter),i(r)},options:{}}},s={theme:"github-light"};export{s as highlight,m as rehypePlugins,o as remarkPlugins};
//# sourceMappingURL=mdc-imports.mjs.map
