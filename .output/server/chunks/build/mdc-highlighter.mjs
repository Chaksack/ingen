import{getMdcConfigs as i}from"./mdc-configs.mjs";import{createWasmOnigEngine as t}from"shiki/engine/oniguruma";function createShikiHighlighter({langs:i=[],themes:t=[],bundledLangs:s={},bundledThemes:e={},getMdcConfigs:r,options:n,engine:a}={}){let o,l;async function getShiki(){return o||(o=async function(){const{createHighlighterCore:s,addClassToHast:e,isSpecialLang:r,isSpecialTheme:n}=await import("shiki/core"),{transformerNotationDiff:o,transformerNotationErrorLevel:l,transformerNotationFocus:h,transformerNotationHighlight:m}=await import("@shikijs/transformers"),c=await s({langs:i,themes:t,engine:a});for await(const i of await getConfigs())await(i.shiki?.setup?.(c));return{shiki:c,addClassToHast:e,isSpecialLang:r,isSpecialTheme:n,transformers:[o(),l(),h(),m()]}}()),o}async function getConfigs(){return l||(l=Promise.resolve(r?.()||[])),l}return async(i,t,r,a={})=>{const{shiki:o,addClassToHast:l,isSpecialLang:h,isSpecialTheme:m,transformers:c}=await getShiki(),p={defaultColor:!1,meta:{__raw:a.meta}};"ts-type"===t||"typescript-type"===t?(t="typescript",p.grammarContextCode="let a:"):"vue-html"!==t&&"vue-template"!==t||(t="vue",p.grammarContextCode="<template>");const g={..."string"==typeof r?{default:r}:r||{}},d=o.getLoadedThemes(),k=o.getLoadedLanguages();"string"!=typeof t||k.includes(t)||h(t)||(s[t]?await o.loadLanguage(s[t]):t="text");for(const[i,t]of Object.entries(g))"string"!=typeof t||d.includes(t)||m(t)||(e[t]?await o.loadTheme(e[t]):g[i]="none");const f=[...c];for(const s of await getConfigs()){const e="function"==typeof s.shiki?.transformers?await(s.shiki?.transformers(i,t,r,a)):s.shiki?.transformers||[];f.push(...e)}const u=o.codeToHast(i.trimEnd(),{lang:t,...p,themes:g,transformers:[...f,{name:"mdc:highlight",line(i,t){a.highlights?.includes(t)&&l(i,"highlight"),i.properties.line=t}},{name:"mdc:newline",line(t){if(i?.includes("\n")){if(0===t.children.length||1===t.children.length&&"element"===t.children[0].type&&1===t.children[0].children.length&&"text"===t.children[0].children[0].type&&""===t.children[0].children[0].value)return void(t.children=[{type:"element",tagName:"span",properties:{emptyLinePlaceholder:!0},children:[{type:"text",value:"\n"}]}]);const i=t.children.at(-1);if("element"===i?.type&&"span"===i.tagName){const t=i.children.at(-1);"text"===t?.type&&(t.value+="\n")}}}}]}).children[0],y=u.children[0],j=n?.wrapperStyle;u.properties.style=j?"string"==typeof j?j:u.properties.style:"";const v=[];return Object.keys(g).forEach(i=>{const t="default"!==i?`.${i}`:"";v.push(j?`${t} .shiki,`:"",`html .${i} .shiki span {`,`color: var(--shiki-${i});`,`background: var(--shiki-${i}-bg);`,`font-style: var(--shiki-${i}-font-style);`,`font-weight: var(--shiki-${i}-font-weight);`,`text-decoration: var(--shiki-${i}-text-decoration);`,"}"),v.push(`html${t} .shiki span {`,`color: var(--shiki-${i});`,`background: var(--shiki-${i}-bg);`,`font-style: var(--shiki-${i}-font-style);`,`font-weight: var(--shiki-${i}-font-weight);`,`text-decoration: var(--shiki-${i}-text-decoration);`,"}")}),{tree:y.children,className:Array.isArray(u.properties.class)?u.properties.class.join(" "):u.properties.class,inlineStyle:u.properties.style,style:v.join("")}}}const s=createShikiHighlighter({bundledLangs:{javascript:()=>import("shiki/langs/javascript.mjs"),js:()=>import("shiki/langs/javascript.mjs"),jsx:()=>import("shiki/langs/jsx.mjs"),json:()=>import("shiki/langs/json.mjs"),typescript:()=>import("shiki/langs/typescript.mjs"),ts:()=>import("shiki/langs/typescript.mjs"),tsx:()=>import("shiki/langs/tsx.mjs"),vue:()=>import("shiki/langs/vue.mjs"),css:()=>import("shiki/langs/css.mjs"),html:()=>import("shiki/langs/html.mjs"),shellscript:()=>import("shiki/langs/shellscript.mjs"),bash:()=>import("shiki/langs/shellscript.mjs"),sh:()=>import("shiki/langs/shellscript.mjs"),shell:()=>import("shiki/langs/shellscript.mjs"),zsh:()=>import("shiki/langs/shellscript.mjs"),markdown:()=>import("shiki/langs/markdown.mjs"),md:()=>import("shiki/langs/markdown.mjs"),mdc:()=>import("shiki/langs/mdc.mjs"),yaml:()=>import("shiki/langs/yaml.mjs"),yml:()=>import("shiki/langs/yaml.mjs")},bundledThemes:{"github-light":()=>import("shiki/themes/github-light.mjs").then(i=>i.default)},options:{},getMdcConfigs:i,engine:t(()=>import("shiki/wasm"))});export{createShikiHighlighter,s as default};
//# sourceMappingURL=mdc-highlighter.mjs.map
