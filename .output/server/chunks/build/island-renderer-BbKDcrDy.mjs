import{defineComponent as r,onErrorCaptured as t,createVNode as e}from"vue";import{i as o,c as i}from"./server.mjs";import"../nitro/nitro.mjs";import"unist-util-visit";import"hast-util-to-string";import"node:http";import"node:https";import"node:events";import"node:buffer";import"node:fs";import"node:path";import"node:crypto";import"consola";import"@unhead/schema-org/vue";import"node:url";import"unified";import"mdast-util-to-string";import"micromark";import"unist-util-stringify-position";import"micromark-util-character";import"micromark-util-chunked";import"micromark-util-resolve-all";import"micromark-util-sanitize-uri";import"slugify";import"remark-parse";import"remark-rehype";import"remark-mdc";import"remark-gfm";import"rehype-external-links";import"rehype-sort-attribute-values";import"rehype-sort-attributes";import"rehype-raw";import"detab";import"github-slugger";import"unhead/server";import"unhead/utils";import"unhead/plugins";import"vue-bundle-renderer/runtime";import"vue/server-renderer";import"ipx";import"vue-router";const m={},p=r({name:"IslandRenderer",props:{context:{type:Object,required:!0}},setup(r){o().entries.clear();const p=m[r.context.name];if(!p)throw i({statusCode:404,statusMessage:`Island component not found: ${r.context.name}`});return t(r=>{console.log(r)}),()=>e(p||"span",{...r.context.props,"data-island-uid":""})}});export{p as default};
//# sourceMappingURL=island-renderer-BbKDcrDy.mjs.map
