import{q as t,t as i}from"../nitro/nitro.mjs";import"unist-util-visit";import"hast-util-to-string";import"node:http";import"node:https";import"node:events";import"node:buffer";import"node:fs";import"node:path";import"node:crypto";import"vue";import"consola";import"@unhead/schema-org/vue";import"node:url";import"unified";import"mdast-util-to-string";import"micromark";import"unist-util-stringify-position";import"micromark-util-character";import"micromark-util-chunked";import"micromark-util-resolve-all";import"micromark-util-sanitize-uri";import"slugify";import"remark-parse";import"remark-rehype";import"remark-mdc";import"remark-gfm";import"rehype-external-links";import"rehype-sort-attribute-values";import"rehype-sort-attributes";import"rehype-raw";import"detab";import"github-slugger";import"unhead/server";import"unhead/utils";import"unhead/plugins";import"vue-bundle-renderer/runtime";import"vue/server-renderer";import"ipx";function createNav(r,e){const{navigation:o}=t().public.content;if(!1===o)return[];const pickNavigationFields=t=>{return{...(r=["title",...o.fields],t=>(t=t||{},r&&r.length?r.filter(i=>void 0!==t[i]).reduce((i,r)=>Object.assign(i,{[r]:t[r]}),{}):t))(t),...(i=t?.navigation,"[object Object]"===Object.prototype.toString.call(i)?t.navigation:{})};var i,r};return sortAndClear(r.sort((t,i)=>t._path.localeCompare(i._path)).reduce((t,r)=>{const o=r._path.substring(1).split("/"),n=r._id.split(":").slice(1),a=!!n[n.length-1]?.match(/([1-9][0-9]*\.)?index.md/g),getNavItem=t=>({title:t.title,_path:t._path,_file:t._file,children:[],...pickNavigationFields(t),...t._draft?{_draft:!0}:{}}),p=getNavItem(r);if(a){const i=e[p._path];if(void 0!==i?.navigation&&!i?.navigation)return t;if("/"!==r._path){const t=getNavItem(r);p.children.push(t)}i&&Object.assign(p,pickNavigationFields(i))}if(1===o.length)return t.push(p),t;return o.slice(0,-1).reduce((t,n,a)=>{const p="/"+o.slice(0,a+1).join("/"),l=e[p];if(void 0!==l?.navigation&&!l.navigation)return[];let s=t.find(t=>t._path===p);return s||(s={title:i(n),_path:p,_file:r._file,children:[],...l&&pickNavigationFields(l)},t.push(s)),s.children},t).push(p),t},[]))}const r=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"});function sortAndClear(t){t.forEach(t=>{t._file=t._file.split(".").slice(0,-1).join(".")});const i=t.sort((t,i)=>r.compare(t._file,i._file));for(const t of i)t.children?.length?sortAndClear(t.children):delete t.children,delete t._file;return t}export{createNav};
//# sourceMappingURL=navigation.mjs.map
